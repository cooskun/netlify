{"version":3,"sources":["webpack:///./src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/base.scss","webpack:///./src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/main.scss","webpack:///./src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/node_modules/sass-toolset/sass-media-query/_sass-media-query.scss","webpack:///./src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/C:/Users/coskunbaris/Desktop/github/portfolio/flat-music-player/src/styles/player.scss"],"names":[],"mappings":";;AAAA;;;EAGE;CCKD;;ACsCC;EFxCF;IAEI;GCKD;CACF;;ACgCC;EFxCF;IAMI;GCOD;CACF;;ADJD;EACE;EAAA;EACA;MAAA;EACA;MAAA;EAEA;EACA;EACA;EAEA;CCKD;;AE3BD;EACE;EACA;CF8BD;;ACWC;EC3CF;IAKI;GFgCD;CACF;;AE7BD;EAGE;EAAA;EACA;MAAA;EACA;MAAA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;CF0BD;;AExBC;EACE;CF2BH;;AExBC;EACE;CF2BH;;AEvBD;EACE;EACA;EACA;CF0BD;;AC9BC;ECCF;IAMI;GF4BD;CACF;;AEzBD;EACE;EACA;EACA;EACA;CF4BD;;AC3CC;ECWF;IAOI;GF8BD;CACF;;AE3BD;EAGE;EACA;EACA;EACA;EAEA;EACA;CF2BD;;AExBG;EACE;EACA;EACA;EACA;EAEA;EACA;EACA;CF0BL;;AErBD;EACE;EAAA;EACA;MAAA;EAEA;EACA;EACA;CFuBD;;AEpBD;EACE;EAAA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;CFsBD;;AEpBC;;EACE;CFwBH;;AEpCD;;EAeM;CF0BL;;AElBC;EACE;EACA;EACA;EACA;CFqBH;;AEhDD;EA+BI;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;CFoBH;;AEhBG;EACE;IACE;GFmBL;;EEjBG;IACE;GFoBL;CACF;;AEfD;EACE;EAAA;EACA;MAAA;EACA;MAAA;EACA;MAAA;CFkBD;;AEfG;EACE;EACA;EACA;EACA;EACA;CFkBL;;AEvBG;;EASI;CFmBP;;AE5BG;;EAYM;CFqBT;;AEjBK;EACE;EACA;CFoBP","file":"css/app.css","sourcesContent":["*,\r\n*:before,\r\n*:after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  @include query(xs-only) {\r\n    font-size: 80%;\r\n  }\r\n\r\n  @include query(sm-only) {\r\n    font-size: 90%;\r\n  }\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background: linear-gradient(to right, $pink--level-2, $pink--level-1);\r\n\r\n  font-family: $font--lobster;\r\n}\r\n","@import url(\"https://fonts.googleapis.com/css?family=Lobster\");\n\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\");\n\n*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 575px) {\n  html {\n    font-size: 80%;\n  }\n}\n\n@media only screen and (min-width: 576px) and (max-width: 767px) {\n  html {\n    font-size: 90%;\n  }\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  overflow: hidden;\n  background: linear-gradient(to right, #f3dec8, #fff0f5);\n  font-family: \"Lobster\", sans-serif;\n}\n\n.player {\n  width: 90vw;\n  position: relative;\n}\n\n@media only screen and (min-width: 768px) {\n  .player {\n    width: 50vw;\n  }\n}\n\n.player_info {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 95%;\n  height: 100%;\n  overflow: hidden;\n  padding: 1rem;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  margin: auto;\n  background: floralwhite;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  transition: bottom 0.6s linear;\n  will-change: bottom;\n}\n\n.player.is-playing .player_info {\n  bottom: 100%;\n}\n\n.player_info_inner {\n  width: 60%;\n}\n\n.player_title {\n  color: #a88d9d;\n  font-size: 1rem;\n  text-transform: capitalize;\n}\n\n@media only screen {\n  .player_title {\n    margin: 0;\n  }\n}\n\n.player_subtitle {\n  color: #a88d9d;\n  font-size: 0.8rem;\n  font-weight: 400;\n  text-transform: capitalize;\n}\n\n@media only screen {\n  .player_subtitle {\n    margin: 0;\n  }\n}\n\n.player_progressbar {\n  height: 0.6rem;\n  position: relative;\n  overflow: hidden;\n  margin-top: 1rem;\n  border-radius: 5px;\n  background: #ebd4da;\n}\n\n.player_progressbar_progress {\n  width: 0;\n  height: 100%;\n  background: #a88d9d;\n  border-radius: 5px;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.player_console {\n  display: flex;\n  justify-content: space-between;\n  border-radius: 10px;\n  background: #fff;\n  box-shadow: 0 50px 100px -10px rgba(0, 0, 0, 0.3);\n}\n\n.player_cover {\n  display: flex;\n  width: 20%;\n  margin-left: 2rem;\n  position: relative;\n  transform: translateY(-5%) scale(1.2);\n  transform-origin: 50% 100%;\n  transition: all 0.5s linear;\n  will-change: transform;\n}\n\n.player_cover.is-animated,\n.player.is-playing .player_cover {\n  transform: translateY(-7%) scale(1.3);\n}\n\n.player_cover.is-animated img,\n.player.is-playing .player_cover img {\n  animation-play-state: running;\n}\n\n.player_cover img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  animation: rotating 10s linear infinite paused;\n}\n\n.player_cover::after {\n  content: \"\";\n  width: 20%;\n  height: 20%;\n  background: #fff;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.player_buttons {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex: 1;\n}\n\n.player_button {\n  padding: 1rem 2rem;\n  border-radius: 5px;\n  background: transparent;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n}\n\n.player_button:hover,\n.player_button.is-hover {\n  background: gainsboro;\n}\n\n.player_button:hover i,\n.player_button.is-hover i {\n  color: #fff;\n}\n\n.player_button i {\n  color: gainsboro;\n  font-size: 2rem;\n}\n\n","// Dependencies\r\n@import \"_config.scss\";\r\n@import \"_functions.scss\";\r\n\r\n// Query\r\n// **************************************\r\n@mixin query($args...) {\r\n  $query: $default-device;\r\n\r\n  @each $i in $args {\r\n    $type: type_of($i);\r\n\r\n    @if $type == \"string\" {\r\n      $valid: map_has_key($Queries, $i);\r\n\r\n      @if $valid {\r\n        $query: $query + \" and \" + map_get($Queries, $i);\r\n      }\r\n    }\r\n\r\n    @if $type == \"map\" {\r\n      $feature: map_keys($i);\r\n      $value: map_values($i);\r\n\r\n      $validFeature: validate(feature, #{$feature});\r\n\r\n      @if $validFeature {\r\n        $query: $query + \" and \" + \"(#{$feature} : #{$value})\";\r\n      }\r\n    }\r\n\r\n    @if $type == \"number\" {\r\n      $i: unitlessToPx($i);\r\n\r\n      @if str_index($query, min-width) and str_index($query, max-width) {\r\n        @warn \"You can add maximum two number value\";\r\n      } @else {\r\n        @if str_index($query, min-width) {\r\n          $query: $query + \" and \" + \"(max-width : #{$i})\";\r\n        } @else {\r\n          $query: $query + \" and \" + \"(min-width : #{$i})\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Size Queries\r\n// **************************************\r\n@mixin min($value) {\r\n  $valid: type_of($value) == \"number\";\r\n\r\n  @if $valid {\r\n    @include qPlus($value) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin max($value) {\r\n  $valid: type_of($value) == \"number\";\r\n  $value: unitlessToPx($value);\r\n\r\n  @if $valid {\r\n    @include qPlus((max-width: $value)) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin minMax($min, $max) {\r\n  $valid: type_of($min) == \"number\" and type_of($max) == \"number\" and $max >\r\n    $min;\r\n\r\n  @if $valid {\r\n    $min: unitlessToPx($min);\r\n    $max: unitlessToPx($max);\r\n\r\n    @include qPlus($min, $max) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin width($value) {\r\n  $valid: type_of($value) == \"number\";\r\n\r\n  @if $valid {\r\n    $value: unitlessToPx($value);\r\n\r\n    @include qPlus((width: $value)) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin height($value) {\r\n  $valid: type_of($value) == \"number\";\r\n\r\n  @if $valid {\r\n    $value: unitlessToPx($value);\r\n\r\n    @include qPlus((height: $value)) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// Breakpoint Mixins\r\n// **************************************\r\n\r\n// Min-Width\r\n@mixin xs() {\r\n  @include min($xs-min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin sm() {\r\n  @include min($sm-min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin md() {\r\n  @include min($md-min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin lg() {\r\n  @include min($lg-min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin xl() {\r\n  @include min($xl-min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Max-width\r\n@mixin xs-max() {\r\n  @include max($xs-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin sm-max() {\r\n  @include max($sm-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin md-max() {\r\n  @include max($md-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin lg-max() {\r\n  @include max($lg-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Min-Width and Max-Width\r\n@mixin xs-only() {\r\n  @include minMax($xs-min, $xs-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin sm-only() {\r\n  @include minMax($sm-min, $sm-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin md-only() {\r\n  @include minMax($md-min, $md-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin lg-only() {\r\n  @include minMax($lg-min, $lg-max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Orientations\r\n// **************************************\r\n@mixin orientation($value) {\r\n  $valid: validate(orientation, $value);\r\n\r\n  @if $valid {\r\n    @include qPlus((orientation: $value)) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin portrait() {\r\n  @include orientation(portrait) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin landscape() {\r\n  @include orientation(landscape) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Retina\r\n// **************************************\r\n@mixin retina() {\r\n  @include qPlus(retina) {\r\n    @content;\r\n  }\r\n}\r\n","// Sass Toolset\r\n@import \"../../node_modules/sass-toolset/sass-media-query/_sass-media-query.scss\";\r\n\r\n.player {\r\n  width: 90vw;\r\n  position: relative;\r\n\r\n  @include query(md) {\r\n    width: 50vw;\r\n  }\r\n}\r\n\r\n.player_info {\r\n  $radius: 10px;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  width: 95%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  padding: 1rem;\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: -1;\r\n  margin: auto;\r\n\r\n  background: floralwhite;\r\n  border-top-left-radius: $radius;\r\n  border-top-right-radius: $radius;\r\n\r\n  transition: bottom 0.6s linear;\r\n  will-change: bottom;\r\n\r\n  .player.is-playing & {\r\n    bottom: 100%;\r\n  }\r\n\r\n  &_inner {\r\n    width: 60%;\r\n  }\r\n}\r\n\r\n.player_title {\r\n  color: $font_color--title;\r\n  font-size: 1rem;\r\n  text-transform: capitalize;\r\n\r\n  @include query(only-xs) {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n.player_subtitle {\r\n  color: $font_color--title;\r\n  font-size: 0.8rem;\r\n  font-weight: 400;\r\n  text-transform: capitalize;\r\n\r\n  @include query(only-xs) {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n.player_progressbar {\r\n  $radius: 5px;\r\n\r\n  height: 0.6rem;\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin-top: 1rem;\r\n\r\n  border-radius: $radius;\r\n  background: $pink--level-3;\r\n\r\n  @at-root {\r\n    .player_progressbar_progress {\r\n      width: 0;\r\n      height: 100%;\r\n      background: $purple--level-2;\r\n      border-radius: $radius;\r\n\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.player_console {\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 50px 100px -10px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.player_cover {\r\n  display: flex;\r\n  width: 20%;\r\n  margin-left: 2rem;\r\n  position: relative;\r\n\r\n  transform: translateY(-5%) scale(1.2);\r\n  transform-origin: 50% 100%;\r\n  transition: all 0.5s linear;\r\n  will-change: transform;\r\n\r\n  &.is-animated {\r\n    transform: translateY(-7%) scale(1.3);\r\n\r\n    img {\r\n      animation-play-state: running;\r\n    }\r\n  }\r\n\r\n  .player.is-playing & {\r\n    @extend .is-animated;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    animation: rotating 10s linear infinite paused;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    width: 20%;\r\n    height: 20%;\r\n    background: #fff;\r\n    border-radius: 50%;\r\n\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  @at-root {\r\n    @keyframes rotating {\r\n      from {\r\n        transform: rotate(0);\r\n      }\r\n      to {\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.player_buttons {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex: 1;\r\n\r\n  @at-root {\r\n    .player_button {\r\n      padding: 1rem 2rem;\r\n      border-radius: 5px;\r\n      background: $button__bg;\r\n      transition: all 0.3s ease-in-out;\r\n      cursor: pointer;\r\n\r\n      &:hover,\r\n      &.is-hover {\r\n        background: $button__bg--hover;\r\n\r\n        i {\r\n          color: $button__color--hover;\r\n        }\r\n      }\r\n\r\n      i {\r\n        color: $button__color;\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}